<div class="container">
    <div class="row">
        <div class="col s12">
            <h5 class="header"> Player View</h5>
            <p> Name: {{fullName}}</p>
            <p> Email: {{email}}</p>

            <h5 class="header">Request a lesson </h5>
            <form class="col s12" id="request-lesson-form">
                <div id="player-id" data-id="{{id}}" class="hide"></div>


                <div class="row">
                    <div class="col s12">
                        <label>Select Coach</label>
                        <select id="coach-select" class="browser-default">
                            <option value="" disabled selected>Choose your coach</option>
                        </select>

                    </div>
                </div>

                <div class="row">
                    <div class="input-field col s12">
                        <input id="select-date" type="text" class="datepicker">
                        <label for="select-date">Select date</label>
                    </div>
                </div>

                <div class="row">
                    <div class="input-field col s12">
                        <input id="select-time" type="text" class="timepicker">
                        <label for="select-time">Select Time</label>
                    </div>
                </div>

                <button class="btn waves-effect waves-light btn-small" id="request-lesson">Request
                    <i class="material-icons right">send</i>
                </button>


            </form>

        </div>

    </div>

    <div class="row">
        <div class="col s12">
            <h5 class="header">Pending Requests</h5>
            <ul id="pending-requests">

            </ul>
            <h5 class="header">Confirmed Lessons</h5>
            <ul id="confirmed-requests">

            </ul>
            <h5 class="header">Cancellations</h5>
            <ul id="lesson-canceled">

            </ul>

        </div>
    </div>

</div>

<script type="text/javascript">

    $(document).ready(function () {

        $('.datepicker').datepicker();
        $('.timepicker').timepicker();

        $('select').formSelect();
        $('select').not('.disabled').formSelect();
        $(".coach").addClass("hide");

        var pendingList = $("#pending-requests");
        var confirmedList = $("#confirmed-requests");
        var cancelList = $("#lesson-canceled");
        var coachSelect = $("#coach-select");

        getCoaches();
        getLessons();
        //===========================================================================
        function getLessons() {
            const playerId = $("#player-id").attr("data-id");
            $.ajax({
                url: "/api/requests/" + playerId,
                method: "GET"

            }).then(function (requests) {
                renderRequests(requests);
            });
        }


        function renderRequests(requests) {
            for (var i = 0; i < requests.data.length; i++) {

                var listItem = $("<li>");

                listItem.text("Lesson on " + requests.data[i].date + " at " + requests.data[i].time + " with coach " + requests.data[i].Coach.fullName);

                if (requests.data[i].status === "pending")
                    pendingList.append(listItem);
                else if (requests.data[i].status === "confirmed")
                    confirmedList.append(listItem);
                else if (requests.data[i].status === "cancelled")
                    cancelList.append(listItem);

            }
        }
        // GET AND RENDER COACHES
        //======================================================================================
        // A function to get Authors and then render our list of Authors
        function getCoaches() {
            $.get("/api/coaches", renderCoachList);
        }
        // Function to either render a list of coaches, or if there are none, direct the user to the page
        // to create an author first
        function renderCoachList(res) {

            var rowsToAdd = [];
            for (var i = 0; i < res.data.length; i++) {
                coachSelect.append(createCoachRow(res.data[i]));
            }
            //coachSelect.empty();

            $("#select-coach").trigger('contentChanged');
            console.log(coachSelect);

        }

        // Creates the author options in the dropdown
        function createCoachRow(coach) {
            var listOption = $("<option>");
            listOption.attr("value", coach.id);
            listOption.text(coach.fullName);
            return listOption;
        }

        // EVENT HANDLERS
        //======================================================================================

        $("#request-lesson-form").on("submit", function (event) {
            event.preventDefault();
            const inputDate = $("#select-date").val();
            const inputTime = $("#select-time").val();
            const defaultStatus = "pending";
            const coachId = parseInt($("#coach-select").val());
            const playerId = $("#player-id").attr("data-id");

            $.ajax({
                url: `/api/request`,
                method: "POST",
                data: {
                    date: inputDate,
                    time: inputTime,
                    status: defaultStatus,
                    PlayerId: playerId,
                    CoachId: coachId

                }
            }).then(function () {
                window.location.replace("/players/" + playerId);

            });
        });
    });

</script>